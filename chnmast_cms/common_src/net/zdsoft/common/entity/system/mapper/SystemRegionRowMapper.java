package net.zdsoft.common.entity.system.mapper;import java.sql.ResultSet;import java.sql.SQLException;import org.springframework.jdbc.core.RowMapper;import net.zdsoft.common.entity.system.SystemRegion;import net.zdsoft.keel.jdbc.MapRowMapper;/** * 行政区划表【t_system_region】 *  * @author *  */@SuppressWarnings("rawtypes")public class SystemRegionRowMapper implements RowMapper {    private static SystemRegionRowMapper rowMapper = new SystemRegionRowMapper();    private static SystemRegionMapRow mapRow = new SystemRegionMapRow();    public static MapSystemRegionMapRow mapMapRow = new MapSystemRegionMapRow();    public static SystemRegionRowMapper instance() {        return rowMapper;    }    /**     * 获取 regioncode 和 regionname     *      * @return     */    public static SystemRegionMapRow instance2() {        return mapRow;    }    @Override    public Object mapRow(ResultSet rs, int i) throws SQLException {        SystemRegion systemRegion = new SystemRegion();        systemRegion.setId(rs.getLong("id"));        systemRegion.setRegionCode(rs.getString("regioncode"));        systemRegion.setRegionName(rs.getString("regionname"));        systemRegion.setFullCode(rs.getString("fullcode"));        systemRegion.setFullName(rs.getString("fullname"));        systemRegion.setShortSpell(rs.getString("shortspell"));        return systemRegion;    }    public static class SystemRegionMapRow implements RowMapper<Object> {        @Override        public Object mapRow(ResultSet rs, int i) throws SQLException {            SystemRegion systemRegion = new SystemRegion();            systemRegion.setRegionCode(rs.getString("regioncode"));            systemRegion.setRegionName(rs.getString("regionname"));            return systemRegion;        }    }        public static class MapSystemRegionMapRow implements MapRowMapper<String,String> {        @Override        public String mapRowKey(ResultSet rs, int i) throws SQLException {            return rs.getString("fullname");        }        @Override        public String mapRowValue(ResultSet rs, int i) throws SQLException {            return rs.getString("fullcode");        }            }}